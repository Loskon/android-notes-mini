## versions ##
[versions]
## SDK
minSdk = "21"
targetSdk = "32"
compileSdk = "32"
## Debug
debugVersionCode = "39"
debugVersionName = "1.3.9"
## App
gradle = "7.2.1"
kotlin = "1.7.10"
## Desugar
desugar = "1.1.5"
## Kotlin
core = "1.8.0"
coroutines = "1.6.3"
## Checks
detekt = "1.20.0"
ktlint = "10.3.0"
# checkstyle = "10.3"
gradlevers = "0.42.0"
## Android
appcompat = "1.4.2"
material = "1.6.1"
constraintlayout = "2.1.4"
recyclerview = "1.2.1"
swiperefreshlayout = "1.1.0"
activity = "1.5.0"
fragment = "1.5.0"
preference = "1.2.0"
lifecycle = "2.5.0"
navigation = "2.5.0"
parcelize = "1.4.30"
## Network
retrofit = "2.9.0"
okHttp = "4.10.0"
moshi = "1.13.0"
## ImageLoader
picasso = "2.71828"
glide = "4.13.2"
coil = "2.1.0"
## DI
hilt = "2.42"
koin = "3.2.0"
## Logs
timber = "5.0.1"
## Test
junit4 = "4.13.2"
junit5 = "5.8.2"
mockito = "4.6.1"
extJunit = "1.1.3"
espresso = "3.4.0"
## Services
googleServices = "4.3.13"
playServices = "20.2.0"
firebaseBom = "30.1.0"
firebaseUiAuth = "8.0.0"
firebaseAnalytics = "21.0.0"
firebaseCrashlytics = "18.2.11"
firebaseMessaging = "23.0.5"
## Misc
splashscreen = "1.0.0-rc01"
holoColorPicker = "1.5"

## libraries ##
[libraries]
## Desugar
desugar = { module = "com.android.tools:desugar_jdk_libs", version.ref = "desugar" }
## Kotlin
core = { module = "androidx.core:core-ktx", version.ref = "core" }
coroutinesCore = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
coroutinesAndroid = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
## Android
appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
material = { module = "com.google.android.material:material", version.ref = "material" }
constraintlayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "constraintlayout" }
recyclerview = { module = "androidx.recyclerview:recyclerview", version.ref = "recyclerview" }
swiperefreshlayout = { module = "androidx.swiperefreshlayout:swiperefreshlayout", version.ref = "swiperefreshlayout" }
activity = { module = "androidx.activity:activity-ktx", version.ref = "activity" }
fragment = { module = "androidx.fragment:fragment-ktx", version.ref = "fragment" }
preference = { module = "androidx.preference:preference-ktx", version.ref = "preference" }
lifecycle-runtime = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle" }
lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle" }
navigation-fragment = { module = "androidx.navigation:navigation-fragment-ktx", version.ref = "navigation" }
navigation-ui = { module = "androidx.navigation:navigation-ui-ktx", version.ref = "navigation" }
## Network
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit-converter-moshi = { module = "com.squareup.retrofit2:converter-moshi", version.ref = "retrofit" }
retrofit-converter-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit" }
okHttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okHttp" }
okHttpLogging = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okHttp" }
moshi = { module = "com.squareup.moshi:moshi-kotlin", version.ref = "moshi" }
moshi-codegen = { module = "com.squareup.moshi:moshi-kotlin-codegen", version.ref = "moshi" }
## ImageLoader
picasso = { module = "com.squareup.picasso:picasso", version.ref = "picasso" }
glide = { module = "com.github.bumptech.glide:glide", version.ref = "glide" }
glide-compiler = { module = "com.github.bumptech.glide:compiler", version.ref = "glide" }
coil = { module = "io.coil-kt:coil", version.ref = "coil" }
## DI
koin = { module = "io.insert-koin:koin-android", version.ref = "koin" }
## Logs
timber = { module = "com.jakewharton.timber:timber", version.ref = "timber" }
## Test
junit4 = { module = "junit:junit", version.ref = "junit4" }
junit5 = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit5" }
mockito = { module = "org.mockito:mockito-core", version.ref = "mockito" }
extJunit = { module = "androidx.test.ext:junit", version.ref = "extJunit" }
espresso = { module = "androidx.test.espresso:espresso-core", version.ref = "espresso" }
koinTest = { module = "io.insert-koin:koin-test", version.ref = "koin" }
koinJUnit4 = { module = "io.insert-koin:koin-test-junit4", version.ref = "koin" }
## Services
firebaseBom = { module = "com.google.firebase:firebase-bom", version.ref = "firebaseBom" }
playServices = { module = "com.google.android.gms:play-services-auth", version.ref = "playServices" }
firebaseUiAuth = { module = "com.firebaseui:firebase-ui-auth", version.ref = "firebaseUiAuth" }
firebaseAuth = { module = "com.google.firebase:firebase-auth-ktx" }
firebaseStorage = { module = "com.google.firebase:firebase-storage-ktx" }

firebaseAnalytics = { module = "com.google.firebase:firebase-analytics-ktx", version.ref = "firebaseAnalytics" }
firebaseCrashlytics = { module = "com.google.firebase:firebase-crashlytics-ktx", version.ref = "firebaseCrashlytics" }
firebaseMessaging = { module = "com.google.firebase:firebase-messaging-ktx", version.ref = "firebaseMessaging" }
## Misc
splashscreen = { module = "androidx.core:core-splashscreen", version.ref = "splashscreen" }
holoColorPicker = { module = "com.larswerkman:HoloColorPicker", version.ref = "holoColorPicker" }

## bundles ##
[bundles]
## Android
android = ["appcompat", "material", "constraintlayout"]
lifecycle = ["lifecycle-runtime", "lifecycle-viewmodel"]
navigation = ["navigation-fragment", "navigation-ui"]
## Network
retrofit-moshi = ["retrofit", "retrofit-converter-moshi", "okHttp", "okHttpLogging"]
retrofit-gson = ["retrofit", "retrofit-converter-gson", "okHttp", "okHttpLogging"]
## DI
koinTest = ["koinTest", "koinJUnit4"]

## plugins ##
[plugins]
## Android
androidApplication = { id = "com.android.application", version.ref = "gradle" }
androidLibrary = { id = "com.android.library", version.ref = "gradle" }
navigation = { id = "androidx.navigation.safeargs.kotlin", version.ref = "navigation" }
parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "parcelize" }
## Kotlin
kotlin = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
## Checks
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlint" }
gradlevers = { id = "com.github.ben-manes.versions", version.ref = "gradlevers" }
## DI
hilt = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }
## Services
googleServices = { id = "com.google.gms.google-services", version.ref = "googleServices" }